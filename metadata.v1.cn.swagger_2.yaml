swagger: '2.0'
info:
  title: 用户属性
  version: '1.0'
host: a1.easemob.com
basePath: /
schemes:
  - http
paths:
  '/{orgName}/{appName}/metadata/user/capacity':
    parameters:
      - description: App管理员 Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - in: path
        name: orgName
        required: true
        type: string
      - in: path
        name: appName
        required: true
        type: string
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/getCapacityResponse'
        '401':
          description: 只有app管理员有权限
          schema:
            $ref: '#/definitions/unauthorizedResponse'
        '500':
          description: |
            一般是mysql错误。 如果问题持续存在，请联系我们的技术支持团队。
          schema:
            $ref: '#/definitions/errorResponse'
      description: 获取该app下所有用户的用户属性总大小，单位Bytes
      operationId: getAppUserMetadataSize
      summary: 获取总大小
  '/{orgName}/{appName}/metadata/user/get':
    parameters:
      - in: path
        name: orgName
        required: true
        type: string
      - in: path
        name: appName
        required: true
        type: string
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: application/json
          in: header
          name: Content-Type
          required: true
          type: string
        - description: 不需要权限认证。向互联网公开。
          in: header
          name: Authorization
          required: false
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/batchGetMetadataRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/batchGetMetadataResponse'
        '403':
          description: |
            指定的用户名数量超过100
          schema:
            $ref: '#/definitions/batchSizeForbiddenResponse'
        '500':
          description: |
            一般是mysql错误。 如果问题持续存在，请联系我们的技术支持团队。
          schema:
            $ref: '#/definitions/errorResponse'
      description: |
        根据指定的用户名列表和属性列表，查询用户属性。 如果指定的用户/属性不存在，则返回空数据{}。 每次最多指定100个用户。
      operationId: batchGetUserMetadata
      summary: 批量获取用户属性
  '/{orgName}/{appName}/metadata/user/{userName}':
    parameters:
      - in: path
        name: orgName
        required: true
        type: string
      - in: path
        name: appName
        required: true
        type: string
      - in: path
        name: userName
        required: true
        type: string
    delete:
      produces:
        - application/json
      parameters:
        - description: |
            用户级别的 Bearer token. 只有用户本人或app管理员有权删除他的用户属性。
          in: header
          name: Authorization
          required: true
          type: string
      responses:
        '200':
          description: |
            删除成功。注意删除不存在用户也视作成功。
          schema:
            $ref: '#/definitions/booleanResponse'
        '401':
          description: |
            只有用户本人或app管理员有权删除他的用户属性。
          schema:
            $ref: '#/definitions/unauthorizedResponse'
        '500':
          description: |
            一般是mysql错误。 如果问题持续存在，请联系我们的技术支持团队。
          schema:
            $ref: '#/definitions/errorResponse'
      description: |
        删除指定用户的所有用户属性。 如果指定的用户不存在，或其用户属性不存在（也许已经被删除了），也视作删除成功。
      operationId: deleteUserMetadata
      summary: 删除用户属性
    get:
      produces:
        - application/json
      parameters:
        - description: 没有权限认证。开放给互联网。
          in: header
          name: Authorization
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/getMetadataResponse'
        '500':
          description: |
            一般是mysql错误。 如果问题持续存在，请联系我们的技术支持团队。
          schema:
            $ref: '#/definitions/errorResponse'
      description: |
        获取指定用户的所有用户属性键值对。 如果指定用户不存在，或指定用户的属性不存在，则返回空数据{}。
      operationId: getUserMetadata
      summary: 获取用户属性
    put:
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - description: application/x-www-form-urlencoded
          in: header
          name: Content-Type
          required: true
          type: string
        - description: |
            用户级别的 Bearer token.  对于某个用户的属性，只有该用户或app管理员有权做修改。
          in: header
          name: Authorization
          required: true
          type: string
        - description: key-value pairs
          in: formData
          name: body
          required: true
          type: object
      responses:
        '200':
          description: |
            返回设置成功后该用户的所有属性。
          schema:
            $ref: '#/definitions/getMetadataResponse'
        '401':
          description: >
            只有用户本人或app管理员有权修改他的属性。 普通用户尝试修改一个不存在用户的属性时，也会返回401，
            因为普通用户无权知道某个用户名是否存在。
          schema:
            $ref: '#/definitions/unauthorizedResponse'
        '403':
          description: |
            您尝试设置的用户属性值超过长度限制。 该限制可能是对一个用户下的属性总长限制， 也可能是对一个app下所有用户属性的总长限制。
          schema:
            $ref: '#/definitions/dataSizeForbiddenResponse'
        '404':
          description: |
            您要为之设置属性的用户不存在。
          schema:
            $ref: '#/definitions/notFoundResponse'
        '409':
          description: >
            您尝试修改的用户已经被“别人”修改了。 由于我们对用户属性使用乐观锁处理并发修改问题， 当多个线程同时对同一用户做属性修改时，
            只有其中一个线程会修改成功并返回200， 其他线程都会修改失败并返回409。
          schema:
            $ref: '#/definitions/conflictResponse'
        '500':
          description: |
            一般是mysql错误。 如果问题持续存在，请联系我们的技术支持团队。
          schema:
            $ref: '#/definitions/errorResponse'
      description: >
        对指定的用户设置用户属性。 只有该用户本人或app管理员有权限做设置。 用户属性的内容为一个或多个纯文本键值对。
        默认单一用户的属性总长不得超过2KB.  默认一个app下所有用户的所有属性总长不得超过10GB.
      operationId: putUserMetadata
      summary: 设置用户属性
definitions:
  batchGetMetadataRequest:
    description: request body for batch getting metadata of multiple users
    properties:
      properties:
        description: 属性名列表，查询结果只返回该列表中包含的属性，不在该列表中的属性将被忽略。
        example:
          - property_1
          - property_2
          - property_3
        items:
          type: string
        type: array
      targets:
        description: 用户名列表，最多100个用户名。
        example:
          - user_1
          - user_2
          - user_3
        items:
          type: string
        type: array
    type: object
  batchGetMetadataResponse:
    properties:
      data:
        description: username-properties key-value pairs
        example:
          user_1:
            property_1: value_1
            property_2: value_2
          user_2:
            property_3: value_3
          user_3: {}
        type: object
      duration:
        description: response time in milliseconds
        example: 10
        type: long
      timestamp:
        description: epoch timestamp
        example: 1616573382270
        type: long
    required:
      - data
      - duration
      - timestamp
    type: object
  batchSizeForbiddenResponse:
    properties:
      desc:
        description: error message
        example: exceed allowed batch size 100
        type: string
      duration:
        description: response time in milliseconds
        example: 10
        type: long
      timestamp:
        description: epoch timestamp
        example: 1616573382270
        type: long
    required:
      - timestamp
      - duration
      - desc
    type: object
  booleanResponse:
    properties:
      data:
        example: true
        type: boolean
      duration:
        description: response time in milliseconds
        example: 10
        type: long
      timestamp:
        description: epoch timestamp
        example: 1616573382270
        type: long
    required:
      - data
      - duration
      - timestamp
    type: object
  conflictResponse:
    properties:
      desc:
        description: error message
        example: 'update userMetadata failed, concurrent updates not allowed'
        type: string
      duration:
        description: response time in milliseconds
        example: 10
        type: long
      timestamp:
        description: epoch timestamp
        example: 1616573382270
        type: long
    required:
      - timestamp
      - duration
      - desc
    type: object
  dataSizeForbiddenResponse:
    properties:
      desc:
        description: error message
        example: user metadata length exceed the limit
        type: string
      duration:
        description: response time in milliseconds
        example: 10
        type: long
      timestamp:
        description: epoch timestamp
        example: 1616573382270
        type: long
    required:
      - timestamp
      - duration
      - desc
    type: object
  errorResponse:
    properties:
      desc:
        description: error message
        example: >-
          org.hibernate.exception.JDBCConnectionException: Unable to acquire
          JDBC Connection
        type: string
      duration:
        description: response time in milliseconds
        example: 10
        type: long
      timestamp:
        description: epoch timestamp
        example: 1616573382270
        type: long
    required:
      - timestamp
      - duration
      - desc
    type: object
  getCapacityResponse:
    properties:
      data:
        description: current total size in Bytes
        example: 1024
        type: long
      duration:
        description: response time in milliseconds
        example: 10
        type: long
      timestamp:
        description: epoch timestamp
        example: 1616573382270
        type: long
    required:
      - data
      - duration
      - timestamp
    type: object
  getMetadataResponse:
    properties:
      data:
        description: metadata key-value pairs
        example:
          employer: easemob
          key_1: value_1
          key_2: value_2
          title: developer
        type: map
      duration:
        description: response time in milliseconds
        example: 10
        type: long
      timestamp:
        description: epoch timestamp
        example: 1616573382270
        type: long
    required:
      - data
      - duration
      - timestamp
    type: object
  notFoundResponse:
    properties:
      desc:
        description: Not Found
        example: Not Found
        type: string
      duration:
        description: response time in milliseconds
        example: 10
        type: long
      timestamp:
        description: epoch timestamp
        example: 1616573382270
        type: long
    required:
      - timestamp
      - duration
      - desc
    type: object
  unauthorizedResponse:
    properties:
      desc:
        description: unauthorized
        example: unauthorized
        type: string
      duration:
        description: response time in milliseconds
        example: 10
        type: long
      timestamp:
        description: epoch timestamp
        example: 1616573382270
        type: long
    required:
      - timestamp
      - duration
      - desc
    type: object
x-components: {}

